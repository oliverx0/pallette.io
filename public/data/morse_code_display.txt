

/**************
 * PIN Layout
 *************/

// Display columns directly connected to Arduino
int C1 = 10;

// Display rows directly connected to Arduino
int R1 = 11;
int R2 = 12;
int R3 = 13;

// Pins connected to Shift Register
int STROBE = 8;
int DATA = 9;
int CLOCK = 6;
int OUTPUT_ENABLED = 7;

// Shift register outputs and corresponding rows and columns on display
// Q0 = R4
// Q1 = R7
// Q2 = R6
// Q3 = R5
// Q4 = C2
// Q5 = C3
// Q6 = C4
// Q7 = C5


void setup() {

  // Initlize PINs
  pinMode(CLOCK, OUTPUT);
  pinMode(STROBE, OUTPUT);
  pinMode(OUTPUT_ENABLED, OUTPUT);
  pinMode(DATA, OUTPUT);
  pinMode(R1, OUTPUT);
  pinMode(R2, OUTPUT);
  pinMode(C1, OUTPUT);
  pinMode(R3, OUTPUT);
  Serial.begin(9600);  //initialize the serial connection and set xfer rate to 9600 baud

}

void loop() {
  // put your main code here, to run repeatedly:
  char input;
  if (Serial.available() > 0)  //check for available data in the serial recieve buffer
  {
    input = Serial.read();
    if (input >= '0' && input <= '9')   //check that input is in valid form (a digit)
    {
      displayDigit(input);  //call the function to display the proper light sequence
    }
    else
    {
      Serial.println("Invalid input");
    }
  }
}

void sendData(int data, int c1, int r1, int r2, int r3)
{
  digitalWrite(C1, c1);
  digitalWrite(R1, r1);
  digitalWrite(R2, r2);
  digitalWrite(R3, r3);
  digitalWrite(CLOCK, LOW);
  digitalWrite(STROBE, HIGH);
  digitalWrite(OUTPUT_ENABLED, HIGH);
  shiftOut(DATA, CLOCK, MSBFIRST, data);
}

void displayDigit(char digit)
{

  switch(digit)
  {
    case '0':
      while(1)
      {
        sendData(255, LOW, HIGH, HIGH, HIGH);
        delay(5);
        sendData(226, HIGH, HIGH, LOW, LOW);
        delay(5);
        sendData(210, HIGH, HIGH, LOW, LOW);
        delay(5);
        sendData(178, HIGH, HIGH, LOW, LOW);
        delay(5);
        sendData(127, HIGH, HIGH, HIGH, HIGH);
        delay(5);
      }
      break;
    case '1':
        sendData(223, HIGH, HIGH, HIGH, HIGH);
      break;
    case '2':
        while(1)
      {
        sendData(255, LOW, HIGH, LOW, LOW);
        delay(5);
        sendData(3, LOW, HIGH, LOW, LOW);
        delay(5);
        sendData(115, HIGH, HIGH, HIGH, HIGH);
        delay(5);

      }
      break;
    case '3':
      while(1)
      {
        sendData(3, LOW, HIGH, LOW, LOW);
        delay(5);
        sendData(127, HIGH, HIGH, HIGH, HIGH);
        delay(5);
      }
      break;
    case '4':
      while(1)
      {
        sendData(241, LOW, HIGH, HIGH, HIGH);
        delay(5);
        sendData(127, HIGH, HIGH, HIGH, HIGH);
        delay(5);
        sendData(1, LOW, LOW, LOW, LOW);
        delay(5);
      }
      break;
    case '5':
      while(1)
      {
        sendData(243, LOW, HIGH, HIGH, HIGH);
        delay(5);
        sendData(3, LOW, HIGH, LOW, LOW);
        delay(5);
        sendData(127, HIGH, HIGH, LOW, LOW);
        delay(5);
      }
      break;
    case '6':
      while(1)
      {
        sendData(255, LOW, HIGH, HIGH, HIGH);
        delay(5);
        sendData(3, LOW, HIGH, LOW, LOW);
        delay(5);
        sendData(127, HIGH, HIGH, LOW, LOW);
        delay(5);
      }
      break;
    case '7':
      while(1)
      {
        sendData(127, HIGH, HIGH, HIGH, HIGH);
        delay(5);
        sendData(0, LOW, HIGH, LOW, LOW);
        delay(5);
      }
      break;
    case '8':
      while(1)
      {
        sendData(255, LOW, HIGH, HIGH, HIGH);
        delay(5);
        sendData(3, LOW, HIGH, LOW, LOW);
        delay(5);
        sendData(127, HIGH, HIGH, HIGH, HIGH);
        delay(5);
      }
      break;
    case '9':
      while(1)
      {
        sendData(127, HIGH, HIGH, HIGH, HIGH);
        delay(5);
        sendData(0, LOW, HIGH, LOW, LOW);
        delay(5);
        sendData(1, LOW, LOW, LOW, LOW);
        delay(5);
        sendData(241, LOW, HIGH, HIGH, HIGH);
        delay(5);
      }
      break;
  }
}
